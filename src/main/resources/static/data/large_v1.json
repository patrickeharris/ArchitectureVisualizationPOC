{
  "nodes": [
    {
      "nodeName": "MS-8",
      "Dependencies": [
        {
          "nodeName": "MS-31"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-20",
      "Dependencies": [
        {
          "nodeName": "MS-34"
        },
        {
          "nodeName": "MS-19"
        },
        {
          "nodeName": "MS-75"
        },
        {
          "nodeName": "MS-7"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-28"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-73",
      "Dependencies": [
        {
          "nodeName": "MS-27"
        },
        {
          "nodeName": "MS-54"
        },
        {
          "nodeName": "MS-49"
        },
        {
          "nodeName": "MS-48"
        },
        {
          "nodeName": "MS-31"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-18",
      "Dependencies": [
        {
          "nodeName": "MS-28"
        },
        {
          "nodeName": "MS-65"
        },
        {
          "nodeName": "MS-19"
        },
        {
          "nodeName": "MS-7"
        },
        {
          "nodeName": "MS-54"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-72"
        },
        {
          "nodeName": "MS-43"
        },
        {
          "nodeName": "MS-23"
        },
        {
          "nodeName": "MS-65"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-34",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-55"
        },
        {
          "nodeName": "MS-55"
        },
        {
          "nodeName": "MS-20"
        },
        {
          "nodeName": "MS-55"
        },
        {
          "nodeName": "MS-55"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-35",
      "Dependencies": [
        {
          "nodeName": "MS-28"
        },
        {
          "nodeName": "MS-65"
        },
        {
          "nodeName": "MS-19"
        },
        {
          "nodeName": "MS-7"
        },
        {
          "nodeName": "MS-27"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-72"
        },
        {
          "nodeName": "MS-43"
        },
        {
          "nodeName": "MS-23"
        },
        {
          "nodeName": "MS-32"
        },
        {
          "nodeName": "MS-46"
        },
        {
          "nodeName": "MS-65"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-19",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-55"
        },
        {
          "nodeName": "MS-20"
        },
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-35"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-3",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-32"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-17",
      "Dependencies": [
        {
          "nodeName": "MS-87"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-31"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-45",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-46"
        },
        {
          "nodeName": "MS-46"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-7",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-70"
        },
        {
          "nodeName": "MS-20"
        },
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-35"
        },
        {
          "nodeName": "MS-43"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-55",
      "Dependencies": [
        {
          "nodeName": "MS-64"
        },
        {
          "nodeName": "MS-34"
        },
        {
          "nodeName": "MS-19"
        },
        {
          "nodeName": "MS-56"
        },
        {
          "nodeName": "MS-75"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-51",
      "Dependencies": [
        {
          "nodeName": "MS-27"
        },
        {
          "nodeName": "MS-54"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-32"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-31",
      "Dependencies": [
        {
          "nodeName": "MS-17"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-8"
        },
        {
          "nodeName": "MS-73"
        },
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-32"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-36",
      "Dependencies": [
        {
          "nodeName": "MS-27"
        },
        {
          "nodeName": "MS-54"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-28",
      "Dependencies": [
        {
          "nodeName": "MS-20"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-35"
        },
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-32"
        },
        {
          "nodeName": "MS-23"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-4",
      "Dependencies": [
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-28"
        },
        {
          "nodeName": "MS-65"
        },
        {
          "nodeName": "MS-46"
        },
        {
          "nodeName": "MS-37"
        },
        {
          "nodeName": "MS-49"
        },
        {
          "nodeName": "MS-54"
        },
        {
          "nodeName": "MS-3"
        },
        {
          "nodeName": "MS-56"
        },
        {
          "nodeName": "MS-75"
        },
        {
          "nodeName": "MS-51"
        },
        {
          "nodeName": "MS-31"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-72",
      "Dependencies": [
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-35"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-70",
      "Dependencies": [
        {
          "nodeName": "MS-7"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-43",
      "Dependencies": [
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-35"
        },
        {
          "nodeName": "MS-75"
        },
        {
          "nodeName": "MS-7"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-23"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-27",
      "Dependencies": [
        {
          "nodeName": "MS-75"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-73"
        },
        {
          "nodeName": "MS-61"
        },
        {
          "nodeName": "MS-65"
        },
        {
          "nodeName": "MS-32"
        },
        {
          "nodeName": "MS-36"
        },
        {
          "nodeName": "MS-48"
        },
        {
          "nodeName": "MS-35"
        },
        {
          "nodeName": "MS-51"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-37",
      "Dependencies": [
        {
          "nodeName": "MS-0"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-32"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-32",
      "Dependencies": [
        {
          "nodeName": "MS-28"
        },
        {
          "nodeName": "MS-35"
        },
        {
          "nodeName": "MS-65"
        },
        {
          "nodeName": "MS-46"
        },
        {
          "nodeName": "MS-27"
        },
        {
          "nodeName": "MS-37"
        },
        {
          "nodeName": "MS-49"
        },
        {
          "nodeName": "MS-3"
        },
        {
          "nodeName": "MS-56"
        },
        {
          "nodeName": "MS-75"
        },
        {
          "nodeName": "MS-51"
        },
        {
          "nodeName": "MS-31"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-54",
      "Dependencies": [
        {
          "nodeName": "MS-75"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-73"
        },
        {
          "nodeName": "MS-61"
        },
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-65"
        },
        {
          "nodeName": "MS-36"
        },
        {
          "nodeName": "MS-48"
        },
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-51"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-64",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-55"
        },
        {
          "nodeName": "MS-65"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-46",
      "Dependencies": [
        {
          "nodeName": "MS-45"
        },
        {
          "nodeName": "MS-35"
        },
        {
          "nodeName": "MS-75"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-32"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-56",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-55"
        },
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-32"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-75",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-27"
        },
        {
          "nodeName": "MS-55"
        },
        {
          "nodeName": "MS-23"
        },
        {
          "nodeName": "MS-54"
        },
        {
          "nodeName": "MS-20"
        },
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-46"
        },
        {
          "nodeName": "MS-43"
        },
        {
          "nodeName": "MS-12"
        },
        {
          "nodeName": "MS-32"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-15",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-48"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-49",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-73"
        },
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-32"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-23",
      "Dependencies": [
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-35"
        },
        {
          "nodeName": "MS-65"
        },
        {
          "nodeName": "MS-75"
        },
        {
          "nodeName": "MS-43"
        },
        {
          "nodeName": "MS-28"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-12",
      "Dependencies": [
        {
          "nodeName": "MS-48"
        },
        {
          "nodeName": "MS-65"
        },
        {
          "nodeName": "MS-75"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-61",
      "Dependencies": [
        {
          "nodeName": "MS-27"
        },
        {
          "nodeName": "MS-54"
        }
      ],
      "Dependants": [],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-48",
      "Dependencies": [
        {
          "nodeName": "MS-15"
        },
        {
          "nodeName": "MS-27"
        },
        {
          "nodeName": "MS-54"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-12"
        },
        {
          "nodeName": "MS-73"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-87",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-17"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-65",
      "Dependencies": [
        {
          "nodeName": "MS-27"
        },
        {
          "nodeName": "MS-54"
        },
        {
          "nodeName": "MS-64"
        },
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-35"
        }
      ],
      "Dependants": [
        {
          "nodeName": "MS-18"
        },
        {
          "nodeName": "MS-35"
        },
        {
          "nodeName": "MS-4"
        },
        {
          "nodeName": "MS-32"
        },
        {
          "nodeName": "MS-23"
        },
        {
          "nodeName": "MS-12"
        }
      ],
      "nodeType": "service"
    },
    {
      "nodeName": "MS-0",
      "Dependencies": [],
      "Dependants": [
        {
          "nodeName": "MS-37"
        }
      ],
      "nodeType": "service"
    }
  ],
  "links": [
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Travel info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.BasicController.queryForTravel"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String stationName, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.BasicController.queryForStationId"
        }
      ],
      "source": "MS-20",
      "target": "MS-28"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.getTripAllDetailInfo"
        }
      ],
      "source": "MS-18",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity<?>",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.createTrip"
        },
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.updateTrip"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.adminQueryAll"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.deleteTrip"
        }
      ],
      "source": "MS-18",
      "target": "MS-72"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.getTripsByRouteId"
        },
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody TripInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.queryInfo"
        }
      ],
      "source": "MS-18",
      "target": "MS-43"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody TripInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.queryInfo"
        }
      ],
      "source": "MS-18",
      "target": "MS-23"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.getTrainTypeByTripId"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel2.controller.Travel2Controller.getRouteByTripId"
        }
      ],
      "source": "MS-18",
      "target": "MS-65"
    },
    {
      "requests": [
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: price.controller.PriceController.update"
        }
      ],
      "source": "MS-34",
      "target": "MS-55"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity<?>",
          "endPointName": "Endpoint function: price.controller.PriceController.create"
        }
      ],
      "source": "MS-34",
      "target": "MS-55"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String routeId, @PathVariable String trainType, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: price.controller.PriceController.query"
        }
      ],
      "source": "MS-34",
      "target": "MS-20"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: price.controller.PriceController.queryAll"
        }
      ],
      "source": "MS-34",
      "target": "MS-55"
    },
    {
      "requests": [
        {
          "type": "DELETE",
          "arguments": "Arguments: [@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: price.controller.PriceController.delete"
        }
      ],
      "source": "MS-34",
      "target": "MS-55"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity<?>",
          "endPointName": "Endpoint function: travel.controller.TravelController.createTrip"
        },
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.updateTrip"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.adminQueryAll"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.deleteTrip"
        }
      ],
      "source": "MS-35",
      "target": "MS-72"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody TripInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.queryInfo"
        },
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.getTripsByRouteId"
        }
      ],
      "source": "MS-35",
      "target": "MS-43"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody TripInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.queryInfo"
        }
      ],
      "source": "MS-35",
      "target": "MS-23"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.getTripAllDetailInfo"
        }
      ],
      "source": "MS-35",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.getRouteByTripId"
        }
      ],
      "source": "MS-35",
      "target": "MS-46"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.getRouteByTripId"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: travel.controller.TravelController.getTrainTypeByTripId"
        }
      ],
      "source": "MS-35",
      "target": "MS-65"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: train.controller.TrainController.create"
        },
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: train.controller.TrainController.update"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: train.controller.TrainController.query"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@PathVariable String id, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: train.controller.TrainController.delete"
        }
      ],
      "source": "MS-19",
      "target": "MS-55"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String id, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: train.controller.TrainController.retrieve"
        }
      ],
      "source": "MS-19",
      "target": "MS-20"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String id, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: train.controller.TrainController.retrieve"
        }
      ],
      "source": "MS-19",
      "target": "MS-18"
    },
    {
      "requests": [
        {
          "arguments": "Arguments: [@PathVariable String id, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: train.controller.TrainController.retrieve"
        }
      ],
      "source": "MS-19",
      "target": "MS-35"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: assurance.controller.AssuranceController.createNewAssurance"
        }
      ],
      "source": "MS-3",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: assurance.controller.AssuranceController.createNewAssurance"
        }
      ],
      "source": "MS-3",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody AuthDto authDto]",
          "returnData": "Return: HttpEntity<Response>",
          "endPointName": "Endpoint function: auth.controller.AuthController.createDefaultUser"
        }
      ],
      "source": "MS-17",
      "target": "MS-31"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody List<String> stationIdList]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: food.controller.FoodStoreController.getFoodStoresByStationIds"
        }
      ],
      "source": "MS-45",
      "target": "MS-46"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String tripId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: food.controller.TrainFoodController.getTrainFoodOfTrip"
        }
      ],
      "source": "MS-45",
      "target": "MS-46"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: ResponseEntity<Response>",
          "endPointName": "Endpoint function: route.controller.RouteController.createAndModifyRoute"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: route.controller.RouteController.queryAll"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: route.controller.RouteController.deleteRoute"
        }
      ],
      "source": "MS-7",
      "target": "MS-70"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: route.controller.RouteController.queryById"
        }
      ],
      "source": "MS-7",
      "target": "MS-20"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: route.controller.RouteController.queryById"
        }
      ],
      "source": "MS-7",
      "target": "MS-18"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: route.controller.RouteController.queryById"
        }
      ],
      "source": "MS-7",
      "target": "MS-35"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String startId, @PathVariable String terminalId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: route.controller.RouteController.queryByStartAndTerminal"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String routeId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: route.controller.RouteController.queryById"
        }
      ],
      "source": "MS-7",
      "target": "MS-43"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String accountId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: security.controller.SecurityController.check"
        }
      ],
      "source": "MS-51",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String accountId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: security.controller.SecurityController.check"
        }
      ],
      "source": "MS-51",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody UserDto user, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: ResponseEntity<Response>",
          "endPointName": "Endpoint function: user.controller.UserController.updateUser"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: ResponseEntity<Response>",
          "endPointName": "Endpoint function: user.controller.UserController.getAllUser"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@PathVariable String userId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: ResponseEntity<Response>",
          "endPointName": "Endpoint function: user.controller.UserController.deleteUserById"
        }
      ],
      "source": "MS-31",
      "target": "MS-8"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String userId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: ResponseEntity<Response>",
          "endPointName": "Endpoint function: user.controller.UserController.getUserByUserId"
        }
      ],
      "source": "MS-31",
      "target": "MS-73"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String userId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: ResponseEntity<Response>",
          "endPointName": "Endpoint function: user.controller.UserController.getUserByUserId"
        }
      ],
      "source": "MS-31",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String userId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: ResponseEntity<Response>",
          "endPointName": "Endpoint function: user.controller.UserController.getUserByUserId"
        }
      ],
      "source": "MS-31",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Travel info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: ticketinfo.controller.TicketInfoController.queryForTravel"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String name, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: ticketinfo.controller.TicketInfoController.queryForStationId"
        }
      ],
      "source": "MS-28",
      "target": "MS-18"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Travel info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: ticketinfo.controller.TicketInfoController.queryForTravel"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String name, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: ticketinfo.controller.TicketInfoController.queryForStationId"
        }
      ],
      "source": "MS-28",
      "target": "MS-35"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Travel info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: ticketinfo.controller.TicketInfoController.queryForTravel"
        }
      ],
      "source": "MS-28",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Travel info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: ticketinfo.controller.TicketInfoController.queryForTravel"
        }
      ],
      "source": "MS-28",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String name, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: ticketinfo.controller.TicketInfoController.queryForStationId"
        }
      ],
      "source": "MS-28",
      "target": "MS-23"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: plan.controller.RoutePlanController.getCheapestRoutes"
        },
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: plan.controller.RoutePlanController.getMinStopStations"
        },
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: plan.controller.RoutePlanController.getQuickestRoutes"
        }
      ],
      "source": "MS-43",
      "target": "MS-23"
    },
    {
      "requests": [
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.saveOrderInfo"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.getOrderById"
        }
      ],
      "source": "MS-27",
      "target": "MS-73"
    },
    {
      "requests": [
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody Order order, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.updateOrder"
        },
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Order order, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.addcreateNewOrder"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.findAllOrder"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.deleteOrder"
        }
      ],
      "source": "MS-27",
      "target": "MS-61"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.getTicketListByDateAndTripId"
        }
      ],
      "source": "MS-27",
      "target": "MS-65"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Order createOrder, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.createNewOrder"
        }
      ],
      "source": "MS-27",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.getOrderById"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.modifyOrder"
        }
      ],
      "source": "MS-27",
      "target": "MS-36"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.modifyOrder"
        }
      ],
      "source": "MS-27",
      "target": "MS-48"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.calculateSoldTicket"
        }
      ],
      "source": "MS-27",
      "target": "MS-35"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: order.controller.OrderController.securityInfoCheck"
        }
      ],
      "source": "MS-27",
      "target": "MS-51"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Consign request, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: consign.controller.ConsignController.insertConsign"
        }
      ],
      "source": "MS-37",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Consign request, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: consign.controller.ConsignController.insertConsign"
        }
      ],
      "source": "MS-37",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.saveOrderInfo"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.getOrderById"
        }
      ],
      "source": "MS-54",
      "target": "MS-73"
    },
    {
      "requests": [
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody Order order, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.updateOrder"
        },
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Order order, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.addcreateNewOrder"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.findAllOrder"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.deleteOrder"
        }
      ],
      "source": "MS-54",
      "target": "MS-61"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Order createOrder, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.createNewOrder"
        }
      ],
      "source": "MS-54",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.getTicketListByDateAndTripId"
        }
      ],
      "source": "MS-54",
      "target": "MS-65"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.modifyOrder"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.getOrderById"
        }
      ],
      "source": "MS-54",
      "target": "MS-36"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.modifyOrder"
        }
      ],
      "source": "MS-54",
      "target": "MS-48"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.calculateSoldTicket"
        }
      ],
      "source": "MS-54",
      "target": "MS-18"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: other.controller.OrderOtherController.securityInfoCheck"
        }
      ],
      "source": "MS-54",
      "target": "MS-51"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Config info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity<?>",
          "endPointName": "Endpoint function: config.controller.ConfigController.createConfig"
        },
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody Config info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: config.controller.ConfigController.updateConfig"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: config.controller.ConfigController.queryAll"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@PathVariable String configName, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: config.controller.ConfigController.deleteConfig"
        }
      ],
      "source": "MS-64",
      "target": "MS-55"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String configName, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: config.controller.ConfigController.retrieve"
        }
      ],
      "source": "MS-64",
      "target": "MS-65"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: foodsearch.controller.FoodController.createFoodOrder"
        }
      ],
      "source": "MS-46",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: foodsearch.controller.FoodController.createFoodOrder"
        }
      ],
      "source": "MS-46",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Contacts aci, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity<?>",
          "endPointName": "Endpoint function: contacts.controller.ContactsController.createNewContactsAdmin"
        },
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody Contacts info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity",
          "endPointName": "Endpoint function: contacts.controller.ContactsController.modifyContacts"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity",
          "endPointName": "Endpoint function: contacts.controller.ContactsController.getAllContacts"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@PathVariable String contactsId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity",
          "endPointName": "Endpoint function: contacts.controller.ContactsController.deleteContacts"
        }
      ],
      "source": "MS-56",
      "target": "MS-55"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String id, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity",
          "endPointName": "Endpoint function: contacts.controller.ContactsController.getContactsByContactsId"
        }
      ],
      "source": "MS-56",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String id, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: HttpEntity",
          "endPointName": "Endpoint function: contacts.controller.ContactsController.getContactsByContactsId"
        }
      ],
      "source": "MS-56",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.queryForNameBatch"
        }
      ],
      "source": "MS-75",
      "target": "MS-27"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Station station, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: ResponseEntity<Response>",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.create"
        },
        {
          "type": "PUT",
          "arguments": "Arguments: [@RequestBody Station station, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.update"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.query"
        },
        {
          "type": "DELETE",
          "arguments": "Arguments: [@RequestBody Station station, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: ResponseEntity<Response>",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.delete"
        }
      ],
      "source": "MS-75",
      "target": "MS-55"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.queryForNameBatch"
        }
      ],
      "source": "MS-75",
      "target": "MS-23"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.queryForNameBatch"
        }
      ],
      "source": "MS-75",
      "target": "MS-54"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.queryForStationId"
        }
      ],
      "source": "MS-75",
      "target": "MS-20"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.queryForStationId"
        }
      ],
      "source": "MS-75",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.queryForStationId"
        }
      ],
      "source": "MS-75",
      "target": "MS-46"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.queryForStationId"
        }
      ],
      "source": "MS-75",
      "target": "MS-43"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable(value = #quot;stationIdForName#quot;) String stationId, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.queryById"
        }
      ],
      "source": "MS-75",
      "target": "MS-12"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: fdse.microservice.controller.StationController.queryForStationId"
        }
      ],
      "source": "MS-75",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Payment info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: com.trainticket.controller.PaymentController.pay"
        }
      ],
      "source": "MS-15",
      "target": "MS-48"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: boolean",
          "endPointName": "Endpoint function: notification.controller.NotificationController.order_cancel_success"
        }
      ],
      "source": "MS-49",
      "target": "MS-73"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: boolean",
          "endPointName": "Endpoint function: notification.controller.NotificationController.preserve_success"
        }
      ],
      "source": "MS-49",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: boolean",
          "endPointName": "Endpoint function: notification.controller.NotificationController.preserve_success"
        }
      ],
      "source": "MS-49",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: inside_payment.controller.InsidePaymentController.payDifference"
        },
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: inside_payment.controller.InsidePaymentController.drawBack"
        }
      ],
      "source": "MS-48",
      "target": "MS-12"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: inside_payment.controller.InsidePaymentController.drawBack"
        }
      ],
      "source": "MS-48",
      "target": "MS-73"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String verifyCode, HttpServletRequest request, HttpServletResponse response, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: boolean",
          "endPointName": "Endpoint function: verifycode.controller.VerifyCodeController.verifyCode"
        }
      ],
      "source": "MS-87",
      "target": "MS-17"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: seat.controller.SeatController.getLeftTicketOfInterval"
        }
      ],
      "source": "MS-65",
      "target": "MS-18"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: seat.controller.SeatController.getLeftTicketOfInterval"
        }
      ],
      "source": "MS-65",
      "target": "MS-35"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: seat.controller.SeatController.create"
        }
      ],
      "source": "MS-65",
      "target": "MS-4"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: seat.controller.SeatController.create"
        }
      ],
      "source": "MS-65",
      "target": "MS-32"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: seat.controller.SeatController.getLeftTicketOfInterval"
        }
      ],
      "source": "MS-65",
      "target": "MS-23"
    },
    {
      "requests": [
        {
          "type": "POST",
          "arguments": "Arguments: [@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: seat.controller.SeatController.create"
        }
      ],
      "source": "MS-65",
      "target": "MS-12"
    },
    {
      "requests": [
        {
          "type": "GET",
          "arguments": "Arguments: [@PathVariable String weight, @PathVariable String isWithinRegion, @RequestHeader HttpHeaders headers]",
          "returnData": "Return: org.springframework.http.HttpEntity",
          "endPointName": "Endpoint function: consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion"
        }
      ],
      "source": "MS-0",
      "target": "MS-37"
    }
  ]
}