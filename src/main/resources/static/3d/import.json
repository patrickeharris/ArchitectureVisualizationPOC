{"nodes":[{"id":"ts-admin-user-service","group":1,"x":-59.591640186143394,"y":-145.1575824728689,"z":-34.17768842049453,"vx":0,"vy":0,"vz":0,"fx":-59.591640186143394,"fy":-145.1575824728689,"fz":-34.17768842049453},{"id":"ts-user-service","group":2,"x":-27.85983615554286,"y":-85.66091398539157,"z":-30.135555490882055,"vx":0.000020937095923237892,"vy":0.000001131430590318269,"vz":7.815049839011727e-7},{"id":"ts-basic-service","group":3,"x":89.57186010692439,"y":12.607766825990076,"z":73.98945508541479,"vx":0.0000206295258050289,"vy":8.29441780822926e-7,"vz":4.96653082044691e-7},{"id":"ts-ticketinfo-service","group":4,"x":113.58121279168125,"y":-0.7572736696423626,"z":26.46855108029386,"vx":0.000020881784673222834,"vy":0.000002270569017778288,"vz":8.457937634327966e-8},{"id":"ts-price-service","group":5,"x":45.55531126056068,"y":24.47862188439131,"z":107.45807343676958,"vx":0.00002011542992767108,"vy":-4.2413974885593264e-7,"vz":8.644849982718872e-7},{"id":"ts-train-service","group":6,"x":152.0606040436744,"y":32.78438722654541,"z":66.69421461801873,"vx":0.00001985979314005453,"vy":4.6958540724839556e-7,"vz":9.407603655100003e-7},{"id":"ts-station-service","group":7,"x":51.51176176753272,"y":49.287750162759025,"z":14.663840164658701,"vx":0.00002160227774419301,"vy":0.000002138310919618768,"vz":0.0000010611395541320355},{"id":"ts-route-service","group":0,"x":163.38871308869295,"y":-23.911152006023674,"z":55.98355327519363,"vx":0.000020938008141438826,"vy":0.0000016931312865292219,"vz":9.875417544271762e-7},{"id":"ts-cancel-service","group":1,"x":-57.26665931020588,"y":40.00499472208272,"z":-46.58987865472337,"vx":0.0000220932109541276,"vy":0.000003328616656276933,"vz":0.0000014352902850068598},{"id":"ts-order-service","group":2,"x":-10.494911099936974,"y":91.76287290598486,"z":-33.25803952706024,"vx":0.000020210538647070084,"vy":0.000001580878493341673,"vz":-2.1528086540812945e-7},{"id":"ts-order-other-service","group":3,"x":26.303538729761513,"y":91.27421650313352,"z":-35.154094578774966,"vx":0.000022542216627162,"vy":0.0000015409624670219393,"vz":0.0000015603779317856633},{"id":"ts-notification-service","group":4,"x":-35.68134075152475,"y":0.6611192646627748,"z":-25.40248828732986,"vx":0.00001950045895026987,"vy":0.0000012247979508625407,"vz":0.000001555010305654932},{"id":"ts-inside-payment-service","group":5,"x":-1475.7540985815494,"y":-474.4793507781339,"z":-129.32579349632093,"vx":-0.0000010110256591177735,"vy":-3.233295712086156e-7,"vz":-8.869956559515436e-8},{"id":"ts-travel2-service","group":6,"x":299.5583967244313,"y":22.651584393274263,"z":60.036451078354474,"vx":0,"vy":0,"vz":0,"fx":299.5583967244313,"fy":22.651584393274263,"fz":60.036451078354474},{"id":"ts-preserve-other-service","group":7,"x":33.623391383453594,"y":-4.823753740324652,"z":2.454512515559674,"vx":0.000021171705175049377,"vy":0.000001994492920757852,"vz":0.0000017724607190380304},{"id":"ts-admin-travel-service","group":0,"x":206.20569049430966,"y":24.712097197308353,"z":31.367293610269055,"vx":0.00002242843957214671,"vy":0.0000014561275965953965,"vz":0.0000015390683260375882},{"id":"ts-route-plan-service","group":1,"x":164.21331946465847,"y":22.83723853113345,"z":30.44931626502752,"vx":0.000021305458043904004,"vy":0.0000016107746096137544,"vz":9.446239364897215e-7},{"id":"ts-travel-plan-service","group":2,"x":149.39404162334466,"y":49.29923999182364,"z":17.75954679692159,"vx":0.00002070641646785025,"vy":0.0000012193556580965368,"vz":0.0000012741465709009887},{"id":"ts-seat-service","group":3,"x":100.05306602050777,"y":66.79811318329978,"z":6.163852484648115,"vx":0.00002149993238491954,"vy":9.198904278509517e-7,"vz":0.0000010815596520596558},{"id":"ts-admin-basic-info-service","group":4,"x":43.54931672140807,"y":49.422128386689764,"z":75.33030532214848,"vx":0.000020439393897509725,"vy":2.0102238925984712e-7,"vz":0.0000017451050931909648},{"id":"ts-preserve-service","group":5,"x":3.989200100498106,"y":5.98155758930088,"z":-5.044667839997758,"vx":0.000020188456630743133,"vy":0.000001222272976316266,"vz":0.0000012132429490197286},{"id":"ts-food-service","group":6,"x":44.863392328395534,"y":14.229063016478785,"z":-30.08312949180251,"vx":0.0000205683443789608,"vy":6.27248901467558e-7,"vz":1.0994813315881953e-7},{"id":"ts-assurance-service","group":7,"x":-5.575946459855001,"y":-32.18798276064302,"z":-3.5728033145084734,"vx":0.00002004576889992427,"vy":0.0000014631648277298616,"vz":0.0000018640478147328591},{"id":"ts-auth-service","group":0,"x":9.862729414943722,"y":-219.72041893825065,"z":-43.36051974170397,"vx":0,"vy":0,"vz":0,"fx":9.862729414943722,"fy":-219.72041893825065,"fz":-43.36051974170397},{"id":"ts-food-map-service","group":1,"x":26.854164761159858,"y":3.961876280022243,"z":-67.84833697888692,"vx":0.000020299507769363777,"vy":-1.2762945218241242e-8,"vz":0.0000017091576263461274},{"id":"ts-security-service","group":2,"x":-12.447246005468799,"y":45.6901663443564,"z":-24.91666715158785,"vx":0.000020038776998494503,"vy":0.000001764833675174009,"vz":4.5712816686837027e-7},{"id":"ts-execute-service","group":3,"x":-33.996984177519444,"y":194.0786626293515,"z":-84.74331562202707,"vx":0,"vy":0,"vz":0,"fx":-33.996984177519444,"fy":194.0786626293515,"fz":-84.74331562202707},{"id":"ts-admin-route-service","group":4,"x":128.3451971414914,"y":-101.51406414467378,"z":70.97160039442261,"vx":0,"vy":0,"vz":0,"fx":128.3451971414914,"fy":-101.51406414467378,"fz":70.97160039442261},{"id":"ts-consign-service","group":5,"x":-39.05108611833419,"y":-21.527921122396123,"z":11.485227027659274,"vx":0.00001982289624180164,"vy":0.000002849303736842538,"vz":7.482166723896249e-7},{"id":"ts-config-service","group":6,"x":64.2705631746126,"y":83.18624410681345,"z":47.07105330100689,"vx":0.00002172920056321542,"vy":-3.248488108821404e-9,"vz":0.000001986607097992031},{"id":"ts-contacts-service","group":7,"x":-1.2129731440061504,"y":12.614664779981235,"z":43.556469385169244,"vx":0.0000195779006976036,"vy":0.0000011420913232245931,"vz":0.0000012419154059644713},{"id":"ts-payment-service","group":0,"x":-101.82864943975467,"y":112.51793029083184,"z":-33.10777677527522,"vx":0.00002076364357827963,"vy":0.0000020610306878032183,"vz":3.7311283577677384e-7},{"id":"ts-rebook-service","group":1,"x":20.137596613025273,"y":90.79292281234997,"z":1.709251410999039,"vx":0.000021132467687204546,"vy":0.0000016250010693643356,"vz":6.650691699292093e-7},{"id":"ts-admin-order-service","group":2,"x":-15.419716569026564,"y":116.76909200236983,"z":-59.638973049752096,"vx":0.000022196475909439602,"vy":0.0000029442401215573518,"vz":0.0000020288082572950484},{"id":"ts-inside-payment-service","group":3,"x":-57.065570619730906,"y":101.97330123604425,"z":-30.1418121917473,"vx":0.00002170826784631495,"vy":0.000002325407854525743,"vz":0.0000010298465919241026},{"id":"ts-verification-code-service","group":4,"x":-26.705415219360162,"y":-243.15584640652628,"z":-50.07807842129451,"vx":0.000020791710306935884,"vy":0.0000015429709315114734,"vz":0.0000014449746277637909},{"id":"ts-consign-price-service","group":5,"x":-85.27505620728806,"y":-33.98005797162765,"z":17.08990838131812,"vx":0.00001822677346397181,"vy":0.0000026545540215198368,"vz":0.0000013946947434800585},{"id":"ts-travel-service","group":5,"x":108.33482821743726,"y":26.498759485384976,"z":5.877183173307799,"vx":0.000019855112684639894,"vy":0.0000014496646681862484,"vz":3.305033682889271e-7}],"links":[{"source":"ts-admin-user-service","target":"ts-user-service","functions":[{"functionType":"PUT","arguments":"@RequestBody UserDto user, @RequestHeader HttpHeaders headers","returnData":"ResponseEntity<Response>","endpointName":"user.controller.UserController.updateUser"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"ResponseEntity<Response>","endpointName":"user.controller.UserController.getAllUser"},{"functionType":"DELETE","arguments":"@PathVariable String userId, @RequestHeader HttpHeaders headers","returnData":"ResponseEntity<Response>","endpointName":"user.controller.UserController.deleteUserById"}]},{"source":"ts-basic-service","target":"ts-price-service","functions":[{"functionType":"GET","arguments":"@PathVariable String routeId, @PathVariable String trainType, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"price.controller.PriceController.query"}]},{"source":"ts-basic-service","target":"ts-train-service","functions":[{"functionType":"GET","arguments":"@PathVariable String id, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"train.controller.TrainController.retrieve"}]},{"source":"ts-basic-service","target":"ts-station-service","functions":[{"functionType":"GET","arguments":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.queryForStationId"}]},{"source":"ts-basic-service","target":"ts-route-service","functions":[{"functionType":"GET","arguments":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"route.controller.RouteController.queryById"}]},{"source":"ts-cancel-service","target":"ts-order-service","functions":[{"functionType":"PUT","arguments":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.saveOrderInfo"},{"functionType":"GET","arguments":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.getOrderById"}]},{"source":"ts-cancel-service","target":"ts-order-other-service","httpVerb":"PUT","functions":[{"functionType":"PUT","arguments":"@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.saveOrderInfo"},{"functionType":"GET","arguments":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.getOrderById"}]},{"source":"ts-cancel-service","target":"ts-notification-service","functions":[{"functionType":"POST","arguments":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","returnData":"boolean","endpointName":"notification.controller.NotificationController.order_cancel_success"}]},{"source":"ts-cancel-service","target":"ts-inside-payment-service","functions":[{"functionType":"GET","arguments":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"inside_payment.controller.InsidePaymentController.drawBack"}]},{"source":"ts-cancel-service","target":"ts-user-service","functions":[{"functionType":"GET","arguments":"@PathVariable String userId, @RequestHeader HttpHeaders headers","returnData":"ResponseEntity<Response>","endpointName":"user.controller.UserController.getUserByUserId"}]},{"source":"ts-travel2-service","target":"ts-ticketinfo-service","functions":[{"functionType":"POST","arguments":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"functionType":"GET","arguments":"@PathVariable String name, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"ticketinfo.controller.TicketInfoController.queryForStationId"}]},{"source":"ts-travel2-service","target":"ts-seat-service","functions":[{"functionType":"POST","arguments":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"seat.controller.SeatController.getLeftTicketOfInterval"}]},{"source":"ts-travel2-service","target":"ts-train-service","functions":[{"functionType":"GET","arguments":"@PathVariable String id, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"train.controller.TrainController.retrieve"}]},{"source":"ts-travel2-service","target":"ts-route-service","functions":[{"functionType":"GET","arguments":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"route.controller.RouteController.queryById"}]},{"source":"ts-travel2-service","target":"ts-order-other-service","functions":[{"functionType":"GET","arguments":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.calculateSoldTicket"}]},{"source":"ts-travel-service","target":"ts-ticketinfo-service","functions":[{"functionType":"POST","arguments":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"ticketinfo.controller.TicketInfoController.queryForTravel"},{"functionType":"GET","arguments":"@PathVariable String name, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"ticketinfo.controller.TicketInfoController.queryForStationId"}]},{"source":"ts-travel-service","target":"ts-seat-service","functions":[{"functionType":"POST","arguments":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"seat.controller.SeatController.getLeftTicketOfInterval"}]},{"source":"ts-travel-service","target":"ts-train-service","functions":[{"functionType":"GET","arguments":"@PathVariable String id, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"train.controller.TrainController.retrieve"}]},{"source":"ts-travel-service","target":"ts-route-service","functions":[{"functionType":"GET","arguments":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"route.controller.RouteController.queryById"}]},{"source":"ts-travel-service","target":"ts-order-service","functions":[{"functionType":"GET","arguments":"@PathVariable Date travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.calculateSoldTicket"}]},{"source":"ts-auth-service","target":"ts-verification-code-service","functions":[{"functionType":"GET","arguments":"@PathVariable String verifyCode, HttpServletRequest request, HttpServletResponse response, @RequestHeader HttpHeaders headers","returnData":"boolean","endpointName":"verifycode.controller.VerifyCodeController.verifyCode"}]},{"source":"ts-admin-basic-info-service","target":"ts-config-service","functions":[{"functionType":"POST","arguments":"@RequestBody Config info, @RequestHeader HttpHeaders headers","returnData":"HttpEntity<?>","endpointName":"config.controller.ConfigController.createConfig"},{"functionType":"PUT","arguments":"@RequestBody Config info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"config.controller.ConfigController.updateConfig"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"config.controller.ConfigController.queryAll"},{"functionType":"DELETE","arguments":"@PathVariable String configName, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"config.controller.ConfigController.deleteConfig"}]},{"source":"ts-admin-basic-info-service","target":"ts-price-service","functions":[{"functionType":"POST","arguments":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","returnData":"HttpEntity<?>","endpointName":"price.controller.PriceController.create"},{"functionType":"PUT","arguments":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"price.controller.PriceController.update"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"price.controller.PriceController.queryAll"},{"functionType":"DELETE","arguments":"@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"price.controller.PriceController.delete"}]},{"source":"ts-admin-basic-info-service","target":"ts-train-service","functions":[{"functionType":"POST","arguments":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"train.controller.TrainController.create"},{"functionType":"PUT","arguments":"@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"train.controller.TrainController.update"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"train.controller.TrainController.query"},{"functionType":"DELETE","arguments":"@PathVariable String id, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"train.controller.TrainController.delete"}]},{"source":"ts-admin-basic-info-service","target":"ts-contacts-service","functions":[{"functionType":"POST","arguments":"@RequestBody Contacts aci, @RequestHeader HttpHeaders headers","returnData":"HttpEntity<?>","endpointName":"contacts.controller.ContactsController.createNewContactsAdmin"},{"functionType":"PUT","arguments":"@RequestBody Contacts info, @RequestHeader HttpHeaders headers","returnData":"HttpEntity","endpointName":"contacts.controller.ContactsController.modifyContacts"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"HttpEntity","endpointName":"contacts.controller.ContactsController.getAllContacts"},{"functionType":"DELETE","arguments":"@PathVariable String contactsId, @RequestHeader HttpHeaders headers","returnData":"HttpEntity","endpointName":"contacts.controller.ContactsController.deleteContacts"}]},{"source":"ts-admin-basic-info-service","target":"ts-station-service","functions":[{"functionType":"POST","arguments":"@RequestBody Station station, @RequestHeader HttpHeaders headers","returnData":"ResponseEntity<Response>","endpointName":"fdse.microservice.controller.StationController.create"},{"functionType":"PUT","arguments":"@RequestBody Station station, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.update"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.query"},{"functionType":"DELETE","arguments":"@RequestBody Station station, @RequestHeader HttpHeaders headers","returnData":"ResponseEntity<Response>","endpointName":"fdse.microservice.controller.StationController.delete"}]},{"source":"ts-security-service","target":"ts-order-service","functions":[{"functionType":"GET","arguments":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.securityInfoCheck"}]},{"source":"ts-security-service","target":"ts-order-other-service","functions":[{"functionType":"GET","arguments":"@PathVariable Date checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.securityInfoCheck"}]},{"source":"ts-user-service","target":"ts-auth-service","functions":[{"functionType":"POST","arguments":"@RequestBody AuthDto authDto","returnData":"HttpEntity<Response>","endpointName":"auth.controller.AuthController.createDefaultUser"}]},{"source":"ts-execute-service","target":"ts-order-service","functions":[{"functionType":"PUT","arguments":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.modifyOrder"},{"functionType":"GET","arguments":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.getOrderById"}]},{"source":"ts-execute-service","target":"ts-order-other-service","functions":[{"functionType":"PUT","arguments":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.modifyOrder"},{"functionType":"GET","arguments":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.getOrderById"}]},{"source":"ts-ticketinfo-service","target":"ts-basic-service","functions":[{"functionType":"POST","arguments":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.BasicController.queryForTravel"},{"functionType":"GET","arguments":"@PathVariable String stationName, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.BasicController.queryForStationId"}]},{"source":"ts-preserve-other-service","target":"ts-travel2-service","functions":[{"functionType":"POST","arguments":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel2.controller.Travel2Controller.getTripAllDetailInfo"}]},{"source":"ts-preserve-other-service","target":"ts-ticketinfo-service","functions":[{"functionType":"POST","arguments":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"ticketinfo.controller.TicketInfoController.queryForTravel"}]},{"source":"ts-preserve-other-service","target":"ts-food-service","functions":[{"functionType":"POST","arguments":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"foodsearch.controller.FoodController.createFoodOrder"}]},{"source":"ts-preserve-other-service","target":"ts-seat-service","functions":[{"functionType":"POST","arguments":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"seat.controller.SeatController.create"}]},{"source":"ts-preserve-other-service","target":"ts-consign-service","functions":[{"functionType":"POST","arguments":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"consign.controller.ConsignController.insertConsign"}]},{"source":"ts-preserve-other-service","target":"ts-notification-service","functions":[{"functionType":"POST","arguments":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","returnData":"boolean","endpointName":"notification.controller.NotificationController.preserve_success"}]},{"source":"ts-preserve-other-service","target":"ts-order-other-service","functions":[{"functionType":"POST","arguments":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.createNewOrder"}]},{"source":"ts-preserve-other-service","target":"ts-assurance-service","functions":[{"functionType":"GET","arguments":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"assurance.controller.AssuranceController.createNewAssurance"}]},{"source":"ts-preserve-other-service","target":"ts-contacts-service","functions":[{"functionType":"GET","arguments":"@PathVariable String id, @RequestHeader HttpHeaders headers","returnData":"HttpEntity","endpointName":"contacts.controller.ContactsController.getContactsByContactsId"}]},{"source":"ts-preserve-other-service","target":"ts-station-service","functions":[{"functionType":"GET","arguments":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.queryForStationId"}]},{"source":"ts-preserve-other-service","target":"ts-security-service","functions":[{"functionType":"GET","arguments":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"security.controller.SecurityController.check"}]},{"source":"ts-preserve-other-service","target":"ts-user-service","functions":[{"functionType":"GET","arguments":"@PathVariable String userId, @RequestHeader HttpHeaders headers","returnData":"ResponseEntity<Response>","endpointName":"user.controller.UserController.getUserByUserId"}]},{"source":"ts-admin-travel-service","target":"ts-travel2-service","functions":[{"functionType":"PUT","arguments":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel2.controller.Travel2Controller.updateTrip"},{"functionType":"POST","arguments":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","returnData":"HttpEntity<?>","endpointName":"travel2.controller.Travel2Controller.createTrip"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel2.controller.Travel2Controller.adminQueryAll"},{"functionType":"DELETE","arguments":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel2.controller.Travel2Controller.deleteTrip"}]},{"source":"ts-admin-travel-service","target":"ts-travel-service","functions":[{"functionType":"PUT","arguments":"@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.updateTrip"},{"functionType":"POST","arguments":"@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers","returnData":"HttpEntity<?>","endpointName":"travel.controller.TravelController.createTrip"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.adminQueryAll"},{"functionType":"DELETE","arguments":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.deleteTrip"}]},{"source":"ts-admin-route-service","target":"ts-route-service","functions":[{"functionType":"POST","arguments":"@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers","returnData":"ResponseEntity<Response>","endpointName":"route.controller.RouteController.createAndModifyRoute"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"route.controller.RouteController.queryAll"},{"functionType":"DELETE","arguments":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"route.controller.RouteController.deleteRoute"}]},{"source":"ts-route-plan-service","target":"ts-travel2-service","functions":[{"functionType":"POST","arguments":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel2.controller.Travel2Controller.queryInfo"},{"functionType":"GET","arguments":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel2.controller.Travel2Controller.getTripsByRouteId"}]},{"source":"ts-route-plan-service","target":"ts-travel-service","functions":[{"functionType":"POST","arguments":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.queryInfo"},{"functionType":"GET","arguments":"@RequestBody ArrayList<String> routeIds, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.getTripsByRouteId"}]},{"source":"ts-route-plan-service","target":"ts-station-service","functions":[{"functionType":"GET","arguments":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.queryForStationId"}]},{"source":"ts-route-plan-service","target":"ts-route-service","functions":[{"functionType":"POST","arguments":"@PathVariable String routeId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"route.controller.RouteController.queryById"},{"functionType":"GET","arguments":"@PathVariable String startId, @PathVariable String terminalId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"route.controller.RouteController.queryByStartAndTerminal"}]},{"source":"ts-order-service","target":"ts-station-service","functions":[{"functionType":"POST","arguments":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.queryForNameBatch"}]},{"source":"ts-consign-service","target":"ts-consign-price-service","functions":[{"functionType":"GET","arguments":"@PathVariable String weight, @PathVariable String isWithinRegion, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion"}]},{"source":"ts-preserve-service","target":"ts-ticketinfo-service","functions":[{"functionType":"POST","arguments":"@RequestBody Travel info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"ticketinfo.controller.TicketInfoController.queryForTravel"}]},{"source":"ts-preserve-service","target":"ts-travel-service","functions":[{"functionType":"GET","arguments":"@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.getTripAllDetailInfo"}]},{"source":"ts-preserve-service","target":"ts-seat-service","functions":[{"functionType":"POST","arguments":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"seat.controller.SeatController.create"}]},{"source":"ts-preserve-service","target":"ts-food-service","functions":[{"functionType":"POST","arguments":"@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"foodsearch.controller.FoodController.createFoodOrder"}]},{"source":"ts-preserve-service","target":"ts-order-service","functions":[{"functionType":"POST","arguments":"@RequestBody Order createOrder, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.createNewOrder"}]},{"source":"ts-preserve-service","target":"ts-consign-service","functions":[{"functionType":"POST","arguments":"@RequestBody Consign request, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"consign.controller.ConsignController.insertConsign"}]},{"source":"ts-preserve-service","target":"ts-notification-service","functions":[{"functionType":"POST","arguments":"@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers","returnData":"boolean","endpointName":"notification.controller.NotificationController.preserve_success"}]},{"source":"ts-preserve-service","target":"ts-assurance-service","functions":[{"functionType":"POST","arguments":"@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"assurance.controller.AssuranceController.createNewAssurance"}]},{"source":"ts-preserve-service","target":"ts-contacts-service","functions":[{"functionType":"GET","arguments":"@PathVariable String id, @RequestHeader HttpHeaders headers","returnData":"HttpEntity","endpointName":"contacts.controller.ContactsController.getContactsByContactsId"}]},{"source":"ts-preserve-service","target":"ts-station-service","functions":[{"functionType":"GET","arguments":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.queryForStationId"}]},{"source":"ts-preserve-service","target":"ts-security-service","functions":[{"functionType":"GET","arguments":"@PathVariable String accountId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"security.controller.SecurityController.check"}]},{"source":"ts-preserve-service","target":"ts-user-service","functions":[{"functionType":"GET","arguments":"@PathVariable String userId, @RequestHeader HttpHeaders headers","returnData":"ResponseEntity<Response>","endpointName":"user.controller.UserController.getUserByUserId"}]},{"source":"ts-order-other-service","target":"ts-station-service","functions":[{"functionType":"POST","arguments":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.queryForNameBatch"}]},{"source":"ts-food-service","target":"ts-food-map-service","functions":[{"functionType":"GET","arguments":"@RequestBody List<String> stationIdList","returnData":"org.springframework.http.HttpEntity","endpointName":"food.controller.FoodStoreController.getFoodStoresByStationIds"},{"functionType":"GET","arguments":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"food.controller.TrainFoodController.getTrainFoodOfTrip"}]},{"source":"ts-food-service","target":"ts-travel-service","functions":[{"functionType":"GET","arguments":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.getRouteByTripId"}]},{"source":"ts-food-service","target":"ts-station-service","functions":[{"functionType":"GET","arguments":"@PathVariable(value = #quot;stationNameForId#quot;) String stationName, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.queryForStationId"}]},{"source":"ts-rebook-service","target":"ts-inside-payment-service","functions":[{"functionType":"POST","arguments":"@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"inside_payment.controller.InsidePaymentController.payDifference"},{"functionType":"GET","arguments":"@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"inside_payment.controller.InsidePaymentController.drawBack"}]},{"source":"ts-rebook-service","target":"ts-seat-service","functions":[{"functionType":"POST","arguments":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"seat.controller.SeatController.create"}]},{"source":"ts-rebook-service","target":"ts-station-service","functions":[{"functionType":"GET","arguments":"@PathVariable(value = #quot;stationIdForName#quot;) String stationId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.queryById"}]},{"source":"ts-travel-plan-service","target":"ts-travel2-service","functions":[{"functionType":"POST","arguments":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel2.controller.Travel2Controller.queryInfo"}]},{"source":"ts-travel-plan-service","target":"ts-travel-service","functions":[{"functionType":"POST","arguments":"@RequestBody TripInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.queryInfo"}]},{"source":"ts-travel-plan-service","target":"ts-seat-service","functions":[{"functionType":"GET","arguments":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"seat.controller.SeatController.getLeftTicketOfInterval"}]},{"source":"ts-travel-plan-service","target":"ts-station-service","functions":[{"functionType":"POST","arguments":"@RequestBody List<String> stationIdList, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"fdse.microservice.controller.StationController.queryForNameBatch"}]},{"source":"ts-travel-plan-service","target":"ts-route-plan-service","functions":[{"functionType":"GET","arguments":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"plan.controller.RoutePlanController.getCheapestRoutes"},{"functionType":"GET","arguments":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"plan.controller.RoutePlanController.getMinStopStations"},{"functionType":"GET","arguments":"@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"plan.controller.RoutePlanController.getQuickestRoutes"}]},{"source":"ts-travel-plan-service","target":"ts-ticketinfo-service","functions":[{"functionType":"GET","arguments":"@PathVariable String name, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"ticketinfo.controller.TicketInfoController.queryForStationId"}]},{"source":"ts-admin-order-service","target":"ts-order-service","functions":[{"functionType":"POST","arguments":"@RequestBody Order order, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.addcreateNewOrder"},{"functionType":"PUT","arguments":"@RequestBody Order order, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.updateOrder"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.findAllOrder"},{"functionType":"DELETE","arguments":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.deleteOrder"}]},{"source":"ts-admin-order-service","target":"ts-order-other-service","functions":[{"functionType":"POST","arguments":"@RequestBody Order order, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.addcreateNewOrder"},{"functionType":"PUT","arguments":"@RequestBody Order order, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.updateOrder"},{"functionType":"GET","arguments":"@RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.findAllOrder"},{"functionType":"DELETE","arguments":"@PathVariable String orderId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.deleteOrder"}]},{"source":"ts-inside-payment-service","target":"ts-payment-service","functions":[{"functionType":"POST","arguments":"@RequestBody Payment info, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"com.trainticket.controller.PaymentController.pay"}]},{"source":"ts-inside-payment-service","target":"ts-order-service","functions":[{"functionType":"PUT","arguments":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.modifyOrder"}]},{"source":"ts-inside-payment-service","target":"ts-order-other-service","functions":[{"functionType":"PUT","arguments":"@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.modifyOrder"}]},{"source":"ts-seat-service","target":"ts-order-service","functions":[{"functionType":"GET","arguments":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"order.controller.OrderController.getTicketListByDateAndTripId"}]},{"source":"ts-seat-service","target":"ts-order-other-service","functions":[{"functionType":"GET","arguments":"@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"other.controller.OrderOtherController.getTicketListByDateAndTripId"}]},{"source":"ts-seat-service","target":"ts-config-service","functions":[{"functionType":"GET","arguments":"@PathVariable String configName, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"config.controller.ConfigController.retrieve"}]},{"source":"ts-seat-service","target":"ts-travel2-service","functions":[{"functionType":"GET","arguments":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel2.controller.Travel2Controller.getRouteByTripId"},{"functionType":"GET","arguments":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel2.controller.Travel2Controller.getTrainTypeByTripId"}]},{"source":"ts-seat-service","target":"ts-travel-service","functions":[{"functionType":"GET","arguments":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.getRouteByTripId"},{"functionType":"GET","arguments":"@PathVariable String tripId, @RequestHeader HttpHeaders headers","returnData":"org.springframework.http.HttpEntity","endpointName":"travel.controller.TravelController.getTrainTypeByTripId"}]}],"x":563.3798774241527,"y":172.17726465875592,"z":-88.03523395830527,"lookAt":{"x":-356.17377699308224,"y":-110.7589522271494,"z":-360.74052144316556}}